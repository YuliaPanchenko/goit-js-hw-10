{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Використовуємо DOMContentLoaded для того, щоб впевнитися, що весь HTML завантажений перед виконанням скрипта.\n// document.addEventListener('DOMContentLoaded', () => {\n//   const form = document.querySelector('.form');\n// })\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst inputRadios = document.querySelectorAll('input[name=\"state\"]');\n\n// const btn = document.querySelector('button[type=\"submit\"]');\nconst form = document.querySelector('.form');\n\n// let inputNumber;\n\n// delayInput.addEventListener('input', ev => {\n//   inputNumber = parseInt(ev.target.value);\n//   console.log(inputNumber);\n// });\n\n// let selectedState;\n\n// inputRadios.forEach(radio => {\n//   radio.addEventListener('change', ev => {\n//     if (ev.target.checked) {\n//       selectedState = ev.target.value;\n//       console.log('Selected State:', selectedState);\n//     }\n//   });\n// });\n\nform.addEventListener('submit', ev => {\n  ev.preventDefault();\n\n  const inputNumber = form.elements.delay.value;\n  const selectedState = form.elements.state.value;\n  createPromise(inputNumber, selectedState).then(onFulfilled).catch(onRejected);\n\n  function createPromise(delay, state) {\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log('State:', state);\n        if (state === 'fulfilled') {\n          resolve(delay);\n        } else {\n          reject(delay);\n        }\n      }, delay);\n    });\n    return promise;\n  }\n\n  function onFulfilled(delay) {\n    iziToast.success({\n      message: `✅ Fulfilled promise in ${delay}ms`,\n    });\n    console.log(`✅ Fulfilled promise in ${delay}ms`);\n  }\n\n  function onRejected(delay) {\n    iziToast.error({\n      message: `❌ Rejected promise in ${delay}ms`,\n    });\n    console.log(`❌ Rejected promise in ${delay}ms`);\n  }\n});\n\n// function createPromise(value, delay, status) {\n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (status) resolve(value);\n//       else reject(value);\n//     }, delay);\n//   });\n//   return promise;\n// }\n"],"names":["form","ev","inputNumber","selectedState","createPromise","onFulfilled","onRejected","delay","state","resolve","reject","iziToast"],"mappings":"wIAQmB,SAAS,cAAc,qBAAqB,EAC3C,SAAS,iBAAiB,qBAAqB,EAGnE,MAAMA,EAAO,SAAS,cAAc,OAAO,EAoB3CA,EAAK,iBAAiB,SAAUC,GAAM,CACpCA,EAAG,eAAc,EAEjB,MAAMC,EAAcF,EAAK,SAAS,MAAM,MAClCG,EAAgBH,EAAK,SAAS,MAAM,MAC1CI,EAAcF,EAAaC,CAAa,EAAE,KAAKE,CAAW,EAAE,MAAMC,CAAU,EAE5E,SAASF,EAAcG,EAAOC,EAAO,CAWnC,OAVgB,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/C,WAAW,IAAM,CACf,QAAQ,IAAI,SAAUF,CAAK,EACvBA,IAAU,YACZC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACd,CAAK,CAEF,CAED,SAASF,EAAYE,EAAO,CAC1BI,EAAS,QAAQ,CACf,QAAS,0BAA0BJ,CAAK,IAC9C,CAAK,EACD,QAAQ,IAAI,0BAA0BA,CAAK,IAAI,CAChD,CAED,SAASD,EAAWC,EAAO,CACzBI,EAAS,MAAM,CACb,QAAS,yBAAyBJ,CAAK,IAC7C,CAAK,EACD,QAAQ,IAAI,yBAAyBA,CAAK,IAAI,CAC/C,CACH,CAAC"}